# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Node.js
        run: sudo apt-get install node

      - name: Install NPM
        run: sudo apt-get install npm

      - name: Install dependencies
        run: npm install

      - name: Linter (ESLint)
        run: npm run lint

      - name: Install Prettier
        run: npm install --save-dev prettier

      - name: Formatter (Prettier)
        run: npm run prettier
        
      - name: Test (Jest)
        env:
          CI: true
        run: npm run test

      - name: Build application
        run: npm run build

      # This step outputs the URL of the built application
      - name: Output application URL
        run: echo "::set-output name=application_url::$(npm run build | grep 'Your application is running at' | awk '{print $NF}')"

      - name: Install Terraform
        run: sudo apt-get install terraform

      - name: Configure Terraform
        run: terraform init

      - name: Deploy Infrastructure
        run: terraform apply -var "application_url=${{ steps.deploy.outputs.application_url }}" --auto-approve
